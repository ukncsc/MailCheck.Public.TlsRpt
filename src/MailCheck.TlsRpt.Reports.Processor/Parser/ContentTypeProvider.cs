using System.Collections.Generic;
using System.Linq;
using Microsoft.Extensions.Logging;
using MimeKit;

namespace MailCheck.TlsRpt.Reports.Processor.Parser
{
    public interface IContentTypeProvider
    {
        string GetContentType(MimePart mimePart);
    }

    public class ContentTypeProvider : IContentTypeProvider
    {
        private const string AlternativeContentTypeHeader = "ContentType";

        private readonly ILogger<ContentTypeProvider> _log;

        public ContentTypeProvider(ILogger<ContentTypeProvider> log)
        {
            _log = log;
        }

        //This handles case where ContentType is used instead of Content-Type
        //this is seen in aggregate reports generated by Trustwave SEG software.
        public string GetContentType(MimePart mimePart)
        {
            string contentType = mimePart.ContentType.MimeType.ToLower();

            if (contentType == ContentType.TextPlain)
            {
                Dictionary<string, Header> headers = mimePart.Headers.ToDictionary(_ => _.Field);

                if (headers.TryGetValue(AlternativeContentTypeHeader, out Header header))
                {
                    MimeKit.ContentType updatedContentType = MimeKit.ContentType.Parse(ParserOptions.Default, header.RawValue);

                    string updatedContentTypeString = updatedContentType.MimeType.ToLower();
                    _log.LogDebug($"Updated content type from {contentType} to {updatedContentTypeString}");
                    return updatedContentTypeString;
                }
            }

            return contentType;
        }
    }
}