//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace MailCheck.TlsRpt.Poller.Domain.Errors.Rules
{
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [DebuggerNonUserCode()]
    [CompilerGenerated()]
    internal class TlsRptRuleMarkDown
    {

        private static ResourceManager resourceMan;

        private static CultureInfo resourceCulture;

        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TlsRptRuleMarkDown()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static ResourceManager ResourceManager
        {
            get
            {
                if (ReferenceEquals(resourceMan, null))
                {
                    ResourceManager temp = new ResourceManager("MailCheck.TlsRpt.Poller.Domain.Errors.Rules.TlsRptRuleMarkDown", typeof(TlsRptRuleMarkDown).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ### Publish a TLS-RPT record to enable TLS reporting
        ///
        ///This won&apos;t affect your email deliverability and will enable reporting to Mail Check
        ///
        ///This tells anyone sending email to your domain that:
        ///
        ///you have a TLS-RPT policy `(v=TLSRPT1)` 
        ///
        ///they should send reports on encrypted email delivery to the NCSC Mail Check service `(rua=tls-rua@mailcheck.service.ncsc.gov.uk)` 
        ///
        ///Publish this text (TXT) record to the DNS zone for {0}:
        ///
        ///`_smtp._tls.{0} TXT v=TLSRPTv1;rua=mailto:tls-rua@mailcheck.service.ncsc.gov.uk`.
        /// </summary>
        internal static string NoTlsRptError
        {
            get
            {
                return ResourceManager.GetString("NoTlsRptError", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This TLS-RPT record has requested mail servers to send aggregate reports to {0} destinations.
        ///
        ///Please be aware that email servers are only obliged to deliver to the first one.Any extra destinations may get a random selection of reports giving misleading statistics.
        ///
        ///[From the TLS-RPT RFC:](https://tools.ietf.org/html/rfc8460#section-3)
        ///
        ///`The record supports the ability to declare more than one rua, and ifthere exists more than one, the reporter MAY attempt to deliver toeach of the supported rua destin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RuaTagShouldNotHaveMoreThanOneUri
        {
            get
            {
                return ResourceManager.GetString("RuaTagShouldNotHaveMoreThanOneUri", resourceCulture);
            }
        }
    }
}
